# Copyright 2021 Oliver Preuschl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: "system:package:version:create [pull_request-closed-merged:master]"

on:
  pull_request:
    types:
      - closed
    branches:
      - master
    paths:
      - "2-force-app/**"
      - "3-force-apex-test/**"
  workflow_dispatch:
    inputs:
      branch:
        description: "Source Branch"
        required: true
        type: string
      title:
        description: "Title"
        required: true
        type: string
      tsd_url:
        description: "TSD URL"
        required: false
        type: string

permissions:
  contents: write

jobs:
  create-package-version:
    if: ${{ github.repository != 'Oliver-Preuschl/sfdx-package-dev-template' && (github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch') }}
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        id: extract_branch_name
        shell: bash
        run: echo "BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV

      - name: "Checkout source code"
        uses: actions/checkout@v4

      - name: "Setup Node"
        uses: actions/setup-node@v4

      - name: "Install npm dependencies"
        run: npm ci

      - name: "Install Salesforce CLI"
        run: npm install -g @salesforce/cli@latest --global

      - name: "Populate auth file with DEVHUB_AUTH_URL secret"
        shell: bash
        run: "echo ${{ secrets.DEVHUB_AUTH_URL}} > ./DEVHUB_AUTH_URL.txt"

      - name: "Authenticate Dev Hub"
        run: "sf org login sfdx-url --sfdx-url-file ./DEVHUB_AUTH_URL.txt --alias devhub -d"

      - name: "Get Package Name"
        id: get_package_name
        run: |
          chmod +x ./.github/scripts/getPackageAttribute.js
          package_name="$(node ./.github/scripts/getPackageAttribute.js name)"
          echo "PACKAGE_NAME=${package_name}" >> $GITHUB_ENV

      - name: "Get Package Password"
        id: get_package_password
        run: |
          chmod +x ./.github/scripts/getPackageAttribute.js
          package_password="$(node ./.github/scripts/getPackageAttribute.js password)"
          echo "PACKAGE_PASSWORD=${package_password}" >> $GITHUB_ENV

      - name: "Get Branch (Dispatch)"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: get_branch_dispatch
        run: |
          echo "BRANCH=${{ inputs.branch }}" >> $GITHUB_ENV

      - name: "Get Branch (Pull Request)"
        if: ${{ github.event_name == 'pull_request' }}
        id: get_branch_pull_request
        run: |
          echo "BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV

      - name: "Get Title (Dispatch)"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: get_title_dispatch
        run: |
          echo "TITLE=${{ inputs.title }}" >> $GITHUB_ENV

      - name: "Get Title (Pull Request)"
        if: ${{ github.event_name == 'pull_request' }}
        id: get_title_pull_request
        run: |
          echo "TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV

      - name: "Get TSD URL (Dispatch)"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: get_tsd_url_dispatch
        run: |
          echo "TSD_URL=${{ inputs.tsd_url }}" >> $GITHUB_ENV

      - name: "Get TSD URL (Pull Request)"
        if: ${{ github.event_name == 'pull_request' }}
        id: get_tsd_url_pull_request
        run: |
          chmod +x ./.github/scripts/extractTsdUrl.js
          tsd_url="$(node ./.github/scripts/extractTsdUrl.js "${{ github.event.pull_request.body }}")"
          echo "TSD_URL: ${tsd_url}"
          echo "TSD_URL=${tsd_url}" >> $GITHUB_ENV

      - name: "Create new package version - with password"
        if: ${{ env.PACKAGE_PASSWORD != '' }}
        run: 'sf package version create --package "${{ env.PACKAGE_NAME }}" --version-description "{\"branch\": \"${{ env.BRANCH }}\", \"title\" :\"${{ env.TITLE }}\", \"tsdUrl\" :\"${{ env.TSD_URL }}\"}" --releasenotes-url "${{ env.TSD_URL }}" --installation-key "${{ env.PACKAGE_PASSWORD }}" --code-coverage --definition-file config/project-scratch-def.json --wait 60'

      - name: "Create new package version - without password"
        if: ${{ env.PACKAGE_PASSWORD == '' }}
        run: 'sf package version create --package "${{ env.PACKAGE_NAME }}" --version-description "{\"branch\": \"${{ env.BRANCH }}\", \"title\" :\"${{ env.TITLE }}\", \"tsdUrl\" :\"${{ env.TSD_URL }}\"}" --releasenotes-url "${{ env.TSD_URL }}" --code-coverage --installation-key-bypass --definition-file config/project-scratch-def.json --wait 60'

      - name: "Save Package-Versions-JSON"
        id: save_package_versions
        run: |
          chmod +x ./.github/scripts/getPackageVersions.js
          node ./.github/scripts/getPackageVersions.js > ./sfdx-package-versions.json

      - name: "Build README"
        run: |
          chmod +x ./.github/scripts/buildReadme.js
          node ./.github/scripts/buildReadme.js "${{ env.BRANCH }}"

      - name: "Commit Changes"
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email activation@hundw.com
          git add sfdx-project.json sfdx-package-versions.json README.md
          git commit -m "Package Version created"
          git push
