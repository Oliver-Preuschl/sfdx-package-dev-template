# Copyright 2021 Oliver Preuschl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: "system:package:version:create [push:master]"

on:
  push:
    branches:
      - master
    paths:
      - "2-force-app/**"
      - "3-force-apex-test/**"
  workflow_dispatch:

jobs:
  create-package-version:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        id: extract_branch_name
        shell: bash
        run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: "Checkout source code"
        uses: actions/checkout@v2

      - name: "Install npm dependencies"
        run: npm ci

      - name: "Install Salesforce CLI"
        run: |
          wget -nv https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-x64.tar.xz -C sfdx-cli --strip-components 1
          export PATH=./sfdx-cli/bin:$PATH
          echo "./sfdx-cli/bin" >> $GITHUB_PATH

      - name: "Populate auth file with DEVHUB_AUTH_URL secret"
        shell: bash
        run: "echo ${{ secrets.DEVHUB_AUTH_URL}} > ./DEVHUB_AUTH_URL.txt"

      - name: "Authenticate Dev Hub"
        run: "sf org login sfdx-url --sfdx-url-file ./DEVHUB_AUTH_URL.txt --alias devhub -d"

      - name: "Get Package Name"
        id: get_package_name
        run: |
          chmod +x ./.github/scripts/getPackageAttribute.js
          package_name='$(node ./.github/scripts/getPackageAttribute.js name)'
          echo "PACKAGE_NAME=$package_name" >> $GITHUB_ENV

      - name: "Get Package Password"
        id: get_package_password
        run: |
          chmod +x ./.github/scripts/getPackageAttribute.js
          package_password='$(node ./.github/scripts/getPackageAttribute.js password)'
          echo "PACKAGE_PASSWORD=$package_password" >> $GITHUB_ENV

      - name: "Create new package version - with password"
        if: ${{ env.PACKAGE_PASSWORD != '' }}
        run: 'sf package version create --package "${{ env.PACKAGE_NAME }}" --installation-key "${{ env.PACKAGE_PASSWORD }}" --code-coverage --definition-file config/project-scratch-def.json --wait 60'

      - name: "Create new package version - without password"
        if: ${{ env.PACKAGE_PASSWORD == '' }}
        run: 'sf package version create --package "${{ env.PACKAGE_NAME }}" --code-coverage --installation-key-bypass --definition-file config/project-scratch-def.json --wait 60'

      - name: "Save Package-Versions-JSON"
        id: save_package_versions
        run: |
          chmod +x ./.github/scripts/getPackageVersions.js
          node ./.github/scripts/getPackageVersions.js > ./sfdx-package-versions.json

      - name: "Build README"
        run: |
          chmod +x ./.github/scripts/buildReadme.js
          node ./.github/scripts/buildReadme.js "${{ env.BRANCH }}"

      - name: "Commit Changes"
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email activation@hundw.com
          git add sfdx-project.json sfdx-package-versions.json README.md
          git commit -m "Package Version created"
          git push
