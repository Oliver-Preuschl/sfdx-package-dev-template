name: "system:scratch-org:create [create:feature]"

on: create

jobs:
  CreateScratchOrg:
    runs-on: ubuntu-latest
    steps:
      - uses: FranzDiebold/github-env-vars-action@v1.2.1

      - name: "Checkout source code"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        uses: actions/checkout@v2

      - name: "Install Salesforce CLI"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install

      - name: "Populate auth file with DEVHUB_AUTH_URL secret"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        shell: bash
        run: "echo ${{ secrets.DEVHUB_AUTH_URL}} > ./DEVHUB_AUTH_URL.txt"

      - name: "Authenticate Dev Hub"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        run: "sfdx auth:sfdxurl:store -f ./DEVHUB_AUTH_URL.txt -a devhub -d"

      - name: "Get ScratchOrg Name"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        id: get_scratch_org_name
        run: |
          scratchorgname='${{ env.GITHUB_REPOSITORY_NAME }}_${{ env.GITHUB_REF_NAME }}'
          echo "::set-output name=scratch_org_name::$scratchorgname"

      - name: "Display existing Scratch Org Login Link"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        id: display_scratch_org
        continue-on-error: true
        run: 'sfdx force:org:open --targetusername="${{ steps.get_scratch_org_name.outputs.scratch_org_name }}"'

      - name: "Create scratch org"
        if: ${{ startsWith(env.GITHUB_REF_NAME, 'admin') && steps.display_scratch_org.outcome == 'failure' }}
        run: 'sfdx force:org:create --definitionfile config/project-scratch-def.json --targetusername="${{ steps.get_scratch_org_name.outputs.scratch_org_name }}" --setdefaultusername --durationdays 30'

      - name: "Get Scratch Org AuthURL"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        id: get_scratch_org_auth_url
        run: |
          output=$(sfdx force:org:display --targetusername="${{ steps.get_scratch_org_name.outputs.scratch_org_name }}" --verbose | grep -o "force://.*")
          echo "::set-output name=auth_url::$output"

      - name: "Get Auth URL Secret Name"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        id: get_auth_url_secret_name
        run: |
          authurlsecretname='SCRATCH_ORG_AUTH_URL_${{ env.GITHUB_REPOSITORY_NAME }}_${{ env.GITHUB_REF_NAME }}'
          authurlsecretname="${authurlsecretname//[^0-9a-zA-Z_]/_}"
          echo "::set-output name=auth_url_secret_name::$authurlsecretname"

      - name: "Create SCRATCH_ORG_AUTH_URL Secret"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        uses: gliech/create-github-secret-action@v1
        with:
          name: ${{ steps.get_auth_url_secret_name.outputs.auth_url_secret_name }}
          value: ${{ steps.get_scratch_org_auth_url.outputs.auth_url }}
          pa_token: ${{ secrets.PA_TOKEN }}

      - name: "Display Scratch Org Login Link"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        run: 'sfdx force:org:open -u="${{ steps.get_scratch_org_name.outputs.scratch_org_name }}"'
