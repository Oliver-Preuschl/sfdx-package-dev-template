name: "system:test:apex-test"

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
    paths:
      - "2-force-app/**"
      - "3-force-apex-test/**"

jobs:
  run-apex-tests:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v2

      - name: "Get scanner setting"
        id: get_apex_test_setting
        run: |
          chmod +x ./.github/scripts/getPackageAttribute.js
          runapextests=$(node ./.github/scripts/getPackageAttribute.js runApexTests)
          echo "::set-output name=run_apex-tests::$runapextests"

      - name: "Install Salesforce CLI"
        if: (steps.get_apex_test_setting.outputs.run_apex-tests == 'true') || (steps.get_apex_test_setting.outputs.run_apex-tests == true)
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install
          sfdx plugins:install texei-sfdx-plugin

      - name: "Populate auth file with DEVHUB_AUTH_URL secret"
        if: (steps.get_apex_test_setting.outputs.run_apex-tests == 'true') || (steps.get_apex_test_setting.outputs.run_apex-tests == true)
        shell: bash
        run: "echo ${{ secrets.DEVHUB_AUTH_URL}} > ./DEVHUB_AUTH_URL.txt"

      - name: "Authenticate Dev Hub"
        if: (steps.get_apex_test_setting.outputs.run_apex-tests == 'true') || (steps.get_apex_test_setting.outputs.run_apex-tests == true)
        run: "sfdx auth:sfdxurl:store -f ./DEVHUB_AUTH_URL.txt -a devhub -d"

      - name: "Get ScratchOrg Name"
        if: (steps.get_apex_test_setting.outputs.run_apex-tests == 'true') || (steps.get_apex_test_setting.outputs.run_apex-tests == true)
        id: get_scratch_org_name
        run: |
          scratchorgname='${{ env.GITHUB_REPOSITORY_NAME }}_master'
          echo "::set-output name=scratch_org_name::$scratchorgname"

      - name: "Create scratch org"
        if: (steps.get_apex_test_setting.outputs.run_apex-tests == 'true') || (steps.get_apex_test_setting.outputs.run_apex-tests == true)
        run: 'sfdx force:org:create --definitionfile config/project-scratch-def.json --setalias="${{ steps.get_scratch_org_name.outputs.scratch_org_name }}" --setdefaultusername --durationdays 1'

      - name: "Install SFDX-Project-Dependencies"
        if: startsWith(env.GITHUB_REF_NAME, 'admin')
        run: |
          chmod +x ./.github/scripts/installPackageDependencies.js
          node ./.github/scripts/installPackageDependencies.js "${{ steps.get_scratch_org_name.outputs.scratch_org_name }}"

      - name: "Push source"
        if: (steps.get_apex_test_setting.outputs.run_apex-tests == 'true') || (steps.get_apex_test_setting.outputs.run_apex-tests == true)
        run: "sfdx force:source:push"

      - name: "Run Apex tests"
        if: (steps.get_apex_test_setting.outputs.run_apex-tests == 'true') || (steps.get_apex_test_setting.outputs.run_apex-tests == true)
        run: "sfdx force:apex:test:run -c -r human -d ./tests/apex -w 20"

      - name: "Delete scratch org"
        if: (steps.get_apex_test_setting.outputs.run_apex-tests == 'true') || (steps.get_apex_test_setting.outputs.run_apex-tests == true)
        run: 'sfdx force:org:delete -p -u "${{ steps.get_scratch_org_name.outputs.scratch_org_name }}"'
