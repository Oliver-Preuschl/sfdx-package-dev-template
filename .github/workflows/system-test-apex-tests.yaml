# Copyright 2021 Oliver Preuschl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: "system:test:apex-test"

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
    paths:
      - "2-force-app/**"
      - "3-force-apex-test/**"
  workflow_dispatch:

jobs:
  run-apex-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Extract repository name
        id: extract_repository_name
        shell: bash
        run: echo "repository=${GITHUB_REPOSITORY/\//-}" >> $GITHUB_ENV

      - name: "Checkout source code"
        uses: actions/checkout@v2

      - name: "Get scanner setting"
        id: get_apex_test_setting
        run: |
          chmod +x ./.github/scripts/getPackageAttribute.js
          run_apex_tests=$(node ./.github/scripts/getPackageAttribute.js runApexTests)
          echo "RUN_APEX_TESTS=${run_apex_tests}" >> $GITHUB_ENV

      - name: "Install Salesforce CLI"
        if: (env.RUN_APEX_TESTS == 'true') || (env.RUN_APEX_TESTS == true)
        run: |
          wget -nv https://developer.salesforce.com/media/salesforce-cli/sf/channels/stable/sf-linux-x64.tar.xz
          mkdir sf-cli
          tar xJf sf-linux-x64.tar.xz -C sf-cli --strip-components 1
          export PATH=./sf-cli/bin:$PATH
          echo "./sf-cli/bin" >> $GITHUB_PATH

      - name: "Populate auth file with DEVHUB_AUTH_URL secret"
        if: (env.RUN_APEX_TESTS == 'true') || (env.RUN_APEX_TESTS == true)
        shell: bash
        run: "echo ${{ secrets.DEVHUB_AUTH_URL}} > ./DEVHUB_AUTH_URL.txt"

      - name: "Authenticate Dev Hub"
        if: (env.RUN_APEX_TESTS == 'true') || (env.RUN_APEX_TESTS == true)
        run: "sf org login sfdx-url --sfdx-url-file ./DEVHUB_AUTH_URL.txt --alias devhub --set-default-dev-hub"

      - name: "Create scratch org"
        if: (env.RUN_APEX_TESTS == 'true') || (env.RUN_APEX_TESTS == true)
        run: 'sf org create scratch --definition-file config/project-scratch-def.json --alias="apex_tests" --set-default --duration-days 1'

      - name: "Deploy Org-Dependencies to ScratchOrg"
        if: (env.RUN_APEX_TESTS == 'true') || (env.RUN_APEX_TESTS == true)
        continue-on-error: true
        run: "sf project deploy start --source-dir 0-force-org-dependency --ignore-warnings --ignore-errors"

      - name: "Install SFDX-Project-Dependencies"
        if: (env.RUN_APEX_TESTS == 'true') || (env.RUN_APEX_TESTS == true)
        run: |
          chmod +x ./.github/scripts/installPackageDependencies.js
          node ./.github/scripts/installPackageDependencies.js "apex_tests"

      - name: "Push Source to ScratchOrg"
        if: (env.RUN_APEX_TESTS == 'true') || (env.RUN_APEX_TESTS == true)
        run: "sf project deploy start --ignore-conflicts --ignore-warnings"

      - name: "Run Apex tests"
        if: (env.RUN_APEX_TESTS == 'true') || (env.RUN_APEX_TESTS == true)
        run: "sf apex run test --test-level RunLocalTests --code-coverage --result-format human --output-dir ./tests/apex --wait 20"

      - name: "Delete scratch org"
        if: always() && (env.RUN_APEX_TESTS == 'true') || (env.RUN_APEX_TESTS == true)
        run: 'sf org delete scratch --target-org "apex_tests" --no-prompt'
